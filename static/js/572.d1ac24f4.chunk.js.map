{"version":3,"file":"static/js/572.d1ac24f4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserMenu_container__KolyR\",\"name\":\"UserMenu_name__Estw5\",\"button\":\"UserMenu_button__310Zp\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from '../../redux/auth/authOperations';\nimport s from './UserMenu.module.css';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(state => state.auth.user.name);\n  const isLogged = useSelector(state => state.auth.isLogged);\n\n  return (\n    <>\n      {isLogged && (\n        <div className={s.container}>\n          <span className={s.name}>Вітаю, {name}</span>\n          <button\n            type=\"button\"\n            className={s.button}\n            onClick={() => dispatch(logOut())}\n          >\n            Вийти\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"textbox\":\"ContactForm_textbox__5Fl6s\",\"button\":\"ContactForm_button__eSwX9\"};","import s from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeForm = evt => {\n    const { value, name } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleOnSubmitForm = evt => {\n    evt.preventDefault();\n    const dataForm = {\n      name,\n      number,\n    };\n\n    contacts.find(\n      ({ name }) => name.toLowerCase() === dataForm.name.toLowerCase()\n    )\n      ? alert(`${dataForm.name} is already in contacts.`)\n      : dispatch(addNewContact(dataForm));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleOnSubmitForm} className={s.form}>\n      <div>\n        <label>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChangeForm}\n            className={s.textbox}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChangeForm}\n            className={s.textbox}\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__7kL4l\",\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/contactsOperations';\nimport s from './ContactList.module.css';\n\nexport const ContactList = ({ contactsList }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    contactsList.length !== 0 && (\n      <ul className={s.list}>\n        {contactsList.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              onClick={() => {\n                handleDelete(id);\n              }}\n              className={s.button}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__wVnxJ\",\"textbox\":\"Filter_textbox__+flfu\"};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.form}>\n      <label>\n        <p>Find contacts by name</p>\n        <input\n          type=\"text\"\n          value={value}\n          name=\"filter\"\n          onChange={onChange}\n          className={s.textbox}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","// import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { UserMenu } from 'components/UserMenu/UserMenu';\n\nexport const Phonebook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const symbolsFilter = useSelector(state => state.contacts.filter);\n\n  const handleOnInputFilter = evt => {\n    const { value } = evt.target;\n    dispatch(contactsActions.findContact(value));\n  };\n\n  const normFilter = symbolsFilter.toLowerCase();\n  const filteredContacts = normFilter\n    ? contacts.filter(item => item.name.toLowerCase().includes(normFilter))\n    : null;\n  return (\n    <div>\n      <UserMenu />\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter value={symbolsFilter} onChange={handleOnInputFilter} />\n      <ContactList contactsList={filteredContacts || contacts} />\n    </div>\n  );\n};\n"],"names":["UserMenu","dispatch","useDispatch","name","useSelector","state","auth","user","isLogged","className","s","type","onClick","logOut","ContactForm","contacts","items","useState","setName","number","setNumber","handleChangeForm","evt","target","value","onSubmit","preventDefault","dataForm","find","toLowerCase","alert","addNewContact","pattern","title","required","onChange","ContactList","contactsList","useEffect","fetchContacts","length","map","id","deleteContact","handleDelete","Filter","Phonebook","symbolsFilter","filter","normFilter","filteredContacts","item","includes","contactsActions"],"sourceRoot":""}